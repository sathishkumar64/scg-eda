package com.order.kafka.serializer;

import java.util.Map;

import org.apache.avro.Schema;
import org.apache.kafka.common.serialization.Deserializer;

public class AvroDeserializer implements Deserializer<Object> {

	private boolean isKey;

	/**
	 * Constructor used by Kafka consumer.
	 */
	public AvroDeserializer() {

	}

	public AvroDeserializer(SchemaRegistryClient client) {
		schemaRegistry = client;
	}

	public AvroDeserializer(SchemaRegistryClient client, Map<String, ?> props) {
		schemaRegistry = client;
		configure(deserializerConfig(props));
	}

	@Override
	public void configure(Map<String, ?> configs, boolean isKey) {
		this.isKey = isKey;
		configure(new KafkaAvroDeserializerConfig(configs));
	}

	@Override
	public Object deserialize(String s, byte[] bytes) {
		return deserialize(bytes);
	}

	/**
	 * Pass a reader schema to get an Avro projection
	 */
	public Object deserialize(String s, byte[] bytes, Schema readerSchema) {
		return deserialize(bytes, readerSchema);
	}

	@Override
	public void close() {

	}
}
